GenShannonUnBounded_decomposed:=function ( N1,N2,N3 ) #Calculate \Gamma_{N1\cup N3}\time \Gamma_{N2\cup N3}
  local  Ntop,ntop,Nbottom,nbottom,nwhole,rlist, mtx, str, i, j, shineq, 
  nset_i, ineq, pairsTop, pairsBottom, p, Klist, K, nset_ij, greq, neq, A, b, s;
  shineq := [  ];
  Ntop := Union(N1,N3);
  ntop := Size(Ntop);
  Nbottom := Union(N2,N3);
  nbotton := Size(Nbottom);
  nwhole := Size(N1) + Size(N2) + Size(N3);
  for i  in Ntop  do
      nset_i := ShallowCopy(Ntop);
      SubtractSet( nset_i, [ i ] );
      ineq := ZeroMutable( [ 1 .. 2 ^ nwhole - 1] );
      ineq[set2int( Ntop ) ] := 1;
      ineq[set2int( nset_i ) ] := -1;
      Append( shineq, [ ineq ] );
  od;
  for i  in Nbottom  do
      nset_i := ShallowCopy(Nbottom);
      SubtractSet( nset_i, [ i ] );
      ineq := ZeroMutable( [ 1 .. 2 ^ nwhole - 1] );
      ineq[set2int( Nbottom ) ] := 1;
      ineq[set2int( nset_i ) ] := -1;
      Append( shineq, [ ineq ] );
  od;
  pairsTop := Combinations( Ntop, 2 );
  for p  in pairsTop  do
      nset_ij := ShallowCopy(Ntop);
      SubtractSet( nset_ij, p );
      Klist := Combinations( nset_ij );
      for K  in Klist  do
          ineq := ZeroMutable( [ 1 .. 2 ^ nwhole - 1 ] );
          ineq[set2int( Union( K, [ p[1] ] ) ) ] := 1;
          ineq[set2int( Union( K, [ p[2] ] ) ) ] := 1;
          ineq[set2int( Union( K, p ) ) ] := -1;
          if Size( K ) > 0  then
              ineq[set2int( K ) ] := -1;
          fi;
          Append( shineq, [ ineq ] );
      od;
  od;
  pairsBottom := Combinations( Nbottom, 2 );
  for p  in pairsBottom  do
      nset_ij := ShallowCopy(Nbottom);
      SubtractSet( nset_ij, p );
      Klist := Combinations( nset_ij );
      for K  in Klist  do
          ineq := ZeroMutable( [ 1 .. 2 ^ nwhole - 1] );
          ineq[set2int( Union( K, [ p[1] ] ) ) ] := 1;
          ineq[set2int( Union( K, [ p[2] ] ) ) ] := 1;
          ineq[set2int( Union( K, p ) ) ] := -1;
          if Size( K ) > 0  then
              ineq[set2int( K ) ] := -1;
          fi;
          Append( shineq, [ ineq ] );
      od;
  od;
  shineq := - shineq;
  b := ZeroMutable([1..Size(shineq)]);
  return [ shineq, b ];
end;

######################## Try to find valid example
#Gamma 5 with N1:=[1]; N2:=[5]; N3:=[2,3,4];  #(good)
# listofedge:=[[1],[2],[3],[4],[5],[2,3],[2,4],[3,4],[2,3,4]];
# numofVar:=5;
SHLT:=GenShannonUnBounded_decomposed(N1,N2,N3);
AAT:=Permute_marginalAndJoin(numofVar,listofedge);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlistC:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge),linrowsT);
[ [ [ 1, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 1/4, 0, 0, 0, 1/4, 1/4, 0, 1/4 ],
      [ 0, 0, 0, 1/4, 0, 0, 1/4, 1/4, 1/4 ], [ 0, 1/6, 1/6, 0, 0, 1/6, 1/6, 1/6, 1/6 ],
      [ 0, 0, 1/4, 0, 0, 1/4, 0, 1/4, 1/4 ], [ 0, 0, 1/6, 1/6, 0, 1/6, 1/6, 1/6, 1/6 ],
      [ 0, 1/6, 0, 1/6, 0, 1/6, 1/6, 1/6, 1/6 ], [ 0, 1/7, 1/7, 1/7, 0, 1/7, 1/7, 1/7, 1/7 ],
      [ 0, 0, 0, 0, 1, 0, 0, 0, 0 ], [ 0, 1/11, 1/11, 1/11, 0, 2/11, 2/11, 2/11, 2/11 ] ],
  [ [ 0, 0, 0, 1, 0, 0, -1, -1, 1, 0 ], [ 0, 1, 0, 0, 0, -1, -1, 0, 1, 0 ], [ 0, 0, 1, 0, 0, -1, 0, -1, 1, 0 ],
      [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ], [ 0, 0, 0, 0, 0, 0, 0, 1, -1, 0 ],
      [ 0, 0, 0, 0, 0, 1, 0, 0, -1, 0 ], [ 0, 0, 0, 0, 0, 0, 1, 0, -1, 0 ], [ 0, 0, 0, 0, -1, 0, 0, 0, 0, 0 ],
      [ 0, -1, -1, 0, 0, 1, 0, 0, 0, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1, 0, 0 ], [ 0, -1, 0, -1, 0, 0, 1, 0, 0, 0 ] ]
    , [ 30, [ 10 ] ] ]
    
[ [ 0, 0, 0, 1, 0, 0, -1, -1, 1 ], [ 0, 1, 0, 0, 0, -1, -1, 0, 1 ], [ 0, 0, 1, 0, 0, -1, 0, -1, 1 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 1, -1 ], [ 0, 0, 0, 0, 0, 1, 0, 0, -1 ],
  [ 0, 0, 0, 0, 0, 0, 1, 0, -1 ], [ 0, 0, 0, 0, -1, 0, 0, 0, 0 ], [ 0, -1, -1, 0, 0, 1, 0, 0, 0 ],
  [ 0, 0, -1, -1, 0, 0, 0, 1, 0 ], [ 0, -1, 0, -1, 0, 0, 1, 0, 0 ] ]


#ncinstancetop:=[[ ],1,4];
#listofedge_top:=[[1],[2],[3],[4],[2,3],[2,4],[3,4],[2,3,4]];
#numofVar:=4;
SHLT:=AddconstraintsTopAndBottom_indep(ncinstancetop);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_top);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlisttop:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_top),linrowsT);

[ [ [ 1, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 1/4, 0, 0, 1/4, 1/4, 0, 1/4 ],
      [ 0, 0, 0, 1/4, 0, 1/4, 1/4, 1/4 ], [ 0, 1/6, 0, 1/6, 1/6, 1/6, 1/6, 1/6 ],
      [ 0, 0, 1/4, 0, 1/4, 0, 1/4, 1/4 ], [ 0, 0, 1/6, 1/6, 1/6, 1/6, 1/6, 1/6 ],
      [ 0, 1/6, 1/6, 0, 1/6, 1/6, 1/6, 1/6 ], [ 0, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7 ],
      [ 0, 1/11, 1/11, 1/11, 2/11, 2/11, 2/11, 2/11 ] ],
  [ [ 0, 0, 1, 0, -1, 0, -1, 1, 0 ], [ 0, 1, 0, 0, -1, -1, 0, 1, 0 ], [ 0, 0, 0, 1, 0, -1, -1, 1, 0 ],
      [ -1, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 1, 1, 1, 1, 1, 1, 1, 1, 1 ], [ 0, 0, 0, 0, 0, 0, 1, -1, 0 ],
      [ 0, 0, 0, 0, 1, 0, 0, -1, 0 ], [ 0, 0, 0, 0, 0, 1, 0, -1, 0 ], [ 0, -1, 0, -1, 0, 1, 0, 0, 0 ],
      [ 0, 0, -1, -1, 0, 0, 1, 0, 0 ], [ 0, -1, -1, 0, 1, 0, 0, 0, 0 ] ], [ 27, [ 9 ] ] ]
      
  
#ncinstancebottom:=[[  ],1,4];
#listofedge_bottom:=[[1],[2],[3],[4],[2,3],[2,4],[3,4],[2,3,4]]; 
#numofVar:=4;
SHLT:=AddconstraintsTopAndBottom_noindep(ncinstancebottom);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_bottom);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlistbottom:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_bottom),linrowsT);

Combine:=
[ [ 0, 0, 1, 0, 0, -1, 0, -1, 1 ], [ 0, 1, 0, 0, 0, -1, -1, 0, 1 ], [ 0, 0, 0, 1, 0, 0, -1, -1, 1 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 1, -1 ], [ 0, 0, 0, 0, 0, 1, 0, 0, -1 ],
  [ 0, 0, 0, 0, 0, 0, 1, 0, -1 ], [ 0, -1, 0, -1, 0, 0, 1, 0, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1, 0 ],
  [ 0, -1, -1, 0, 0, 1, 0, 0, 0 ], [ 0, 0, 1, 0, 0, -1, 0, -1, 1 ], [ 0, 1, 0, 0, 0, -1, -1, 0, 1 ],
  [ 0, 0, 0, 1, 0, 0, -1, -1, 1 ], [ 0, 0, 0, 0, -1, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 1, -1 ],
  [ 0, 0, 0, 0, 0, 1, 0, 0, -1 ], [ 0, 0, 0, 0, 0, 0, 1, 0, -1 ], [ 0, -1, 0, -1, 0, 0, 1, 0, 0 ],
  [ 0, 0, -1, -1, 0, 0, 0, 1, 0 ], [ 0, -1, -1, 0, 0, 1, 0, 0, 0 ] ];
  
  ################################################ try to find counter example
  
# Gamma 5 with N1:=[1]; N2:=[5]; N3:=[2,3,4]; #(good)
# listofedge:=[[1],[2],[3],[4],[5],[2,3],[2,4],[3,4]];
# numofVar:=5;
SHLT:=GenShannonUnBounded_decomposed(N1,N2,N3);
AAT:=Permute_marginalAndJoin(numofVar,listofedge);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=[];
rlistC:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge),linrowsT);

[ [ 0, -1, 0, -1, 0, 0, 1, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1 ], [ 0, -1, -1, 0, 0, 1, 0, 0 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, -1, 0, 0, 0 ], [ 0, 0, 1, 0, 0, -1, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, -1 ], [ 0, 0, 1, 0, 0, -1, 1, -1 ], [ 0, 1, 0, 0, 0, -1, -1, 1 ],
  [ 0, 1, 0, 0, 0, 0, -1, 0 ], [ 0, 1, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 0, 1, 0, 0, -1, 0 ],
  [ 0, 0, 0, 1, 0, 1, -1, -1 ], [ 0, 0, 0, 1, 0, 0, 0, -1 ] ];
  
# ncinstancetop:=[[ ],1,4];
# listofedge_top:=[[1],[2],[3],[4],[2,3],[2,4],[3,4]];
# numofVar:=4;
SHLT:=AddconstraintsTopAndBottom_indep(ncinstancetop);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_top);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlisttop:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_top),linrowsT);

[ [ 0, -1, 0, -1, 0, 1, 0 ], [ 0, 0, -1, -1, 0, 0, 1 ], [ 0, -1, -1, 0, 1, 0, 0 ], [ -1, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 1, 0, -1, 0, 0 ], [ 0, 0, 1, 0, 0, 0, -1 ], [ 0, 0, 1, 0, -1, 1, -1 ], [ 0, 1, 0, 0, -1, -1, 1 ],
  [ 0, 1, 0, 0, 0, -1, 0 ], [ 0, 1, 0, 0, -1, 0, 0 ], [ 0, 0, 0, 1, 0, -1, 0 ], [ 0, 0, 0, 1, 1, -1, -1 ],
  [ 0, 0, 0, 1, 0, 0, -1 ] ]

CombineT:=
[ [ 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[1]
 [ -1, 0, -1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0 ], #[2]
  [ 0, -1, -1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 ], #[3]
[ -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1 ],  #[4]
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[5]
  [ 0, 0, 1, 0, -1, 0, -1, -1, 0, -1, 0, 1, 0, 0, 0, 1, 0, -1, 0, -1, -1, 0, -1, 0, 1, 0 ], #[2,3]
 [ 1, 0, 0, 0, 0, 0, 1, -1, -1, 0, -1, -1, 0, 1, 0, 0, 0, 0, 0, 1, -1, -1, 0, -1, -1, 0 ], #[2,4]
  [ 0, 1, 0, 0, 0, -1, -1, 1, 0, 0, 0, -1, -1,0, 1, 0, 0, 0, -1, -1, 1, 0, 0, 0, -1, -1 ]]; #[3,4]
  
  Combine:=
  [ [ 0, -1, 0, -1, 0, 0, 1, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1 ], [ 0, -1, -1, 0, 0, 1, 0, 0 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 1, 0, 0, -1, 0, 0 ], [ 0, 0, 1, 0, 0, 0, 0, -1 ],
  [ 0, 0, 1, 0, 0, -1, 1, -1 ], [ 0, 1, 0, 0, 0, -1, -1, 1 ], [ 0, 1, 0, 0, 0, 0, -1, 0 ],
  [ 0, 1, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 0, 1, 0, 0, -1, 0 ], [ 0, 0, 0, 1, 0, 1, -1, -1 ],
  [ 0, 0, 0, 1, 0, 0, 0, -1 ], [ 0, -1, 0, -1, 0, 0, 1, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1 ],
  [ 0, -1, -1, 0, 0, 1, 0, 0 ], [ 0, 0, 0, 0, -1, 0, 0, 0 ], [ 0, 0, 1, 0, 0, -1, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, -1 ], [ 0, 0, 1, 0, 0, -1, 1, -1 ], [ 0, 1, 0, 0, 0, -1, -1, 1 ],
  [ 0, 1, 0, 0, 0, 0, -1, 0 ], [ 0, 1, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 0, 1, 0, 0, -1, 0 ],
  [ 0, 0, 0, 1, 0, 1, -1, -1 ], [ 0, 0, 0, 1, 0, 0, 0, -1 ] ];
  
  
# Gamma 6 with N1:=[1]; N2:=[6]; N3:=[2,3,4,5];  #(good)
# listofedge:=[[1],[2],[3],[4],[5],[6],[2,3],[2,4],[3,4]];
# numofVar:=6;
SHLT:=GenShannonUnBounded_decomposed(N1,N2,N3);
AAT:=Permute_marginalAndJoin(numofVar,listofedge);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=[];
rlistC:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge),linrowsT);

[ [ 0, -1, 0, -1, 0, 0, 0, 1, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 0, 1 ], [ 0, -1, -1, 0, 0, 0, 1, 0, 0 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, -1, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, -1, 0, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 1, 0, 0, 0, 0, 0, -1 ], [ 0, 0, 1, 0, 0, 0, -1, 1, -1 ],
  [ 0, 1, 0, 0, 0, 0, -1, -1, 1 ], [ 0, 1, 0, 0, 0, 0, 0, -1, 0 ], [ 0, 1, 0, 0, 0, 0, -1, 0, 0 ],
  [ 0, 0, 0, 1, 0, 0, 0, -1, 0 ], [ 0, 0, 0, 1, 0, 0, 1, -1, -1 ], [ 0, 0, 0, 1, 0, 0, 0, 0, -1 ] ];
  
  
  
# ncinstancetop:=[[ ],1,5];
# listofedge_top:=[[1],[2],[3],[4],[5],[2,3],[2,4],[3,4]];
# numofVar:=5;
SHLT:=AddconstraintsTopAndBottom_indep(ncinstancetop);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_top);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlisttop:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_top),linrowsT);
A:=
[ [ 0, -1, -1, 0, 0, 1, 0, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1 ], [ 0, -1, 0, -1, 0, 0, 1, 0 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, -1, 0, 0, 0 ], [ 0, 0, 0, 1, 0, 0, -1, 0 ],
  [ 0, 0, 0, 1, 0, 1, -1, -1 ], [ 0, 0, 0, 1, 0, 0, 0, -1 ], [ 0, 1, 0, 0, 0, -1, -1, 1 ],
  [ 0, 1, 0, 0, 0, 0, -1, 0 ], [ 0, 1, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 1, 0, 0, -1, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, -1 ], [ 0, 0, 1, 0, 0, -1, 1, -1 ] ];
  
AT:=[ [ 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ -1, 0, -1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0 ],
  [ -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1 ], [ 0, -1, -1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 1, 0, 0, 0, 0, 0, 1, 0, -1, 0, -1, -1, 0, -1 ],
  [ 0, 0, 1, 0, 0, -1, -1, 0, -1, -1, 0, 0, 0, 1 ], [ 0, 1, 0, 0, 0, 0, -1, -1, 1, 0, 0, 0, -1, -1 ]];
  
  
  Combine:=[ [ 0, -1, -1, 0, 0, 0, 1, 0, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 0, 1 ], [ 0, -1, 0, -1, 0, 0, 0, 1, 0 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, -1, 0, 0, 0, 0 ], [ 0, 0, 0, 1, 0, 0, 0, -1, 0 ],
  [ 0, 0, 0, 1, 0, 0, 1, -1, -1 ], [ 0, 0, 0, 1, 0, 0, 0, 0, -1 ], [ 0, 1, 0, 0, 0, 0, -1, -1, 1 ],
  [ 0, 1, 0, 0, 0, 0, 0, -1, 0 ], [ 0, 1, 0, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 1, 0, 0, 0, -1, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, 0, -1 ], [ 0, 0, 1, 0, 0, 0, -1, 1, -1 ], [ 0, -1, -1, 0, 0, 0, 1, 0, 0 ],
  [ 0, 0, -1, -1, 0, 0, 0, 0, 1 ], [ 0, -1, 0, -1, 0, 0, 0, 1, 0 ], [ 0, 0, 0, 0, 0, -1, 0, 0, 0 ],
  [ 0, 0, 0, 0, -1, 0, 0, 0, 0 ], [ 0, 0, 0, 1, 0, 0, 0, -1, 0 ], [ 0, 0, 0, 1, 0, 0, 1, -1, -1 ],
  [ 0, 0, 0, 1, 0, 0, 0, 0, -1 ], [ 0, 1, 0, 0, 0, 0, -1, -1, 1 ], [ 0, 1, 0, 0, 0, 0, 0, -1, 0 ],
  [ 0, 1, 0, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 1, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 1, 0, 0, 0, 0, 0, -1 ],
  [ 0, 0, 1, 0, 0, 0, -1, 1, -1 ] ];
  
  
# Gamma 7 with N1:=[1,2]; N2:=[7]; N3:=[3,4,5,6];  #(good)
# listofedge:=[[1],[2],[3],[4],[5],[6],[7],[3,4],[3,6],[3,5,6]];
# numofVar:=7;
SHLT:=GenShannonUnBounded_decomposed(N1,N2,N3);
AAT:=Permute_marginalAndJoin(numofVar,listofedge);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=[];
rlistC:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge),linrowsT);

C:=
[ [ 0, 0, 0, 0, -1, 0, 0, 0, -1, 1 ], [ 0, 0, -1, 0, 0, -1, 0, 0, 1, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1, 0, 0 ],
  [ 0, 0, 0, 1, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 0, 0, 0, 1, 0, 0, -1, 0 ], [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, -1, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 1, -1 ], [ 0, 0, 1, 0, 0, 0, 0, -1, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, -1, 0, 0, 0 ], [ 0, 0, 1, 0, 0, 0, 0, 0, -1, 0 ], [ 0, 0, 0, 0, 1, 0, 0, 0, 0, -1 ] ];
  

# ncinstancetop:=[[ ],1,6];
# listofedge_top:=[[1],[2],[3],[4],[5],[6],[3,4],[3,6],[3,5,6]];
# numofVar:=6;
SHLT:=AddconstraintsTopAndBottom_indep(ncinstancetop);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_top);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlisttop:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_top),linrowsT);

  AT:=[ [ 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0 ],
  [ 0, -1, -1, 0, 0, 0, 0, 0, 1, 1, 0 ], [ 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ], [ 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 1, -1, 0, 0, 0, 0, -1, 0, 0 ], [ -1, 1, 0, 0, -1, 0, 0, 1, 0, -1, 0 ],
  [ 1, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1 ]];
  



#ncinstancebottom:=[[  ],1,5];
#listofedge_bottom:=[[1],[2],[3],[4],[5],[2,3],[2,5],[2,4,5]]; 
#numofVar:=5;
SHLT:=AddconstraintsTopAndBottom_noindep(ncinstancebottom);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_bottom);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlistbottom:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_bottom),linrowsT);
  
BT:=
[ [ 0, 0, 0, 0, 0, -1, 0, 0, 0, 0 ], [ 0, -1, -1, 0, 0, 0, 0, 1, 1, 0 ], [ 0, 0, -1, 1, 0, 0, 0, 0, 0, 0 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 1 ], [ 0, -1, 0, 0, 1, 0, 0, 0, 0, 0 ], [ 0, 0, 1, -1, 0, 0, 0, -1, 0, 0 ],
  [ -1, 1, 0, 0, -1, 0, 1, 0, -1, 0 ], [ 1, 0, 0, 0, 0, 0, -1, 0, 0, -1 ] ];
  
CombineT:=
[ [ 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ], #[1]
 [ 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  ], #[2]
  [ 0, -1, -1, 0, 0, 0, 0, 0, 1, 1, 0, 0, -1, -1, 0, 0, 0, 0, 1, 1, 0 ], #[3]
 [ 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0 ], #[4]
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1 ],  #[5]
[ 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0 ], #[6]
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0 ], #[7]
  [ 0, 0, 1, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, -1, 0, 0, 0, -1, 0, 0 ], #[3,4]
[ -1, 1, 0, 0, -1, 0, 0, 1, 0, -1, 0, -1, 1, 0, 0, -1, 0, 1, 0, -1, 0 ], #[3,6]
  [ 1, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 1, 0, 0, 0, 0, 0, -1, 0, 0, -1 ]]; #[3,5,6]
  
  Combine:=
  [ [ 0, 0, 0, 0, -1, 0, 0, 0, -1, 1 ], [ 0, 0, -1, 0, 0, -1, 0, 0, 1, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1, 0, 0 ],
  [ 0, 0, 0, 1, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 0, 0, 0, 1, 0, 0, -1, 0 ], [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, -1, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 1, -1 ], [ 0, 0, 1, 0, 0, 0, 0, -1, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, 0, -1, 0 ], [ 0, 0, 0, 0, 1, 0, 0, 0, 0, -1 ], [ 0, 0, 0, 0, -1, 0, 0, 0, -1, 1 ],
  [ 0, 0, -1, 0, 0, -1, 0, 0, 1, 0 ], [ 0, 0, -1, -1, 0, 0, 0, 1, 0, 0 ], [ 0, 0, 0, 1, 0, 0, 0, -1, 0, 0 ],
  [ 0, 0, 0, 0, 0, 1, 0, 0, -1, 0 ], [ 0, 0, 0, 0, 0, 0, -1, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 1, -1 ],
  [ 0, 0, 1, 0, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 1, 0, 0, 0, 0, 0, -1, 0 ], [ 0, 0, 0, 0, 1, 0, 0, 0, 0, -1 ] ];
  
  
  
# Gamma 7 with N1:=[1,2]; N2:=[7]; N3:=[3,4,5,6];  ##(good)
# listofedge:=[[1],[2],[3],[4],[5],[6],[7],[1,3],[3,4],[3,6],[3,5,6],[3,7]];
# numofVar:=7;
SHLT:=GenShannonUnBounded_decomposed(N1,N2,N3);
AAT:=Permute_marginalAndJoin(numofVar,listofedge);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=[];
rlistC:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge),linrowsT);

C:=
[ [ 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 1, 0 ], [ -1, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0 ],
  [ 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 1 ], [ 0, 0, -1, -1, 0, 0, 0, 0, 1, 0, 0, 0 ],
  [ 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0 ], [ 0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0 ],
  [ 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1 ],
  [ 1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0 ], [ 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0, 0 ], [ 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, -1, 0 ] ]
  

# ncinstancetop:=[[ ],1,6];
# listofedge_top:=[[1],[2],[3],[4],[5],[6],[1,3],[3,4],[3,6],[3,5,6]];
# numofVar:=6;
SHLT:=AddconstraintsTopAndBottom_indep(ncinstancetop);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_top);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlisttop:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_top),linrowsT);

AT:=
[ [ 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0 ],
  [ 0, -1, -1, -1, 0, 0, 0, 1, 0, 1, 0, 1, 0 ], [ 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ], [ 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 1, -1, 0, 0, 0, 0, -1, 0, 0, 0 ],
  [ -1, 0, 1, 0, 0, -1, 0, 0, 1, 0, 0, -1, 0 ], [ 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1 ]];
  


#ncinstancebottom:=[[  ],1,5];
#listofedge_bottom:=[[1],[2],[3],[4],[5],[2,3],[2,5],[2,4,5],[1,2]]; 
#numofVar:=5;
SHLT:=AddconstraintsTopAndBottom_noindep(ncinstancebottom);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_bottom);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlistbottom:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_bottom),linrowsT);


BT:=[ [ 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 ], [ 0, -1, -1, -1, 0, 0, 0, 1, 0, 1, 1, 0 ],
  [ 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0 ], [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ],
  [ 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 1, -1, 0, 0, 0, 0, -1, 0, 0 ],
  [ -1, 0, 1, 0, 0, -1, 0, 0, 1, 0, -1, 0 ], [ 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1 ],
  [ 0, 1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0 ]];
  
  
  CombineT:=
  [ [ 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[1]
 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[2]
  [ 0, -1, -1, -1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, -1, -1, -1, 0, 0, 0, 1, 0, 1, 1, 0 ],  #[3]
[ 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0 ],#[4]
  [ -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ],#[5]
 [ 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 0 ],#[6]
 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 ], #[7]
  [ 0, 1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],#[1,3]
 [ 0, 0, 0, 1, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, -1, 0, 0 ],#[3,4]
  [ -1, 0, 1, 0, 0, -1, 0, 0, 1, 0, 0, -1, 0, -1, 0, 1, 0, 0, -1, 0, 0, 1, 0, -1, 0 ],#[3,6]
 [ 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1 ], #[3,5,6]
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0 ]];#[3,7]


# Gamma 11 with N1:=[1,2,3,10,11]; N2:=[6,7]; N3:=[4,5,8,9];  #(good)
# listofedge:=[[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[1,3],[4,5],[6,7],[8,9],[3,10],[1,2,10,11]];
# numofVar:=11;
SHLT:=GenShannonUnBounded_decomposed(N1,N2,N3);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=[];
rlistC:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge),linrowsT);
C:=[ [ -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 1 ],
  [ 0, -1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, -1, 1 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0 ]
    , [ -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 ],
  [ 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -1 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, -1 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, -1, 0 ], [ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1 ],
  [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 1, -1 ], [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1 ],
  [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0 ], [ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0 ],
  [ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, -1 ],
  [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0 ], [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0 ],
  [ 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0 ], [ 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -1, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 1, 0, 0 ] ]



# ncinstancetop:=[[ ],1,9];
# listofedge_top:=[[1],[2],[3],[4],[5],[6],[7],[8],[9],[1,3],[4,5],[6,7],[3,8],[1,2,8,9]];
# numofVar:=9;
SHLT:=AddconstraintsTopAndBottom_indep(ncinstancetop);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_top);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlisttop:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_top),linrowsT);
AT:=
[ [ -1, 0, 0, 0, -1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ -1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0 ],
  [ -1, 0, 0, 0, 0, -1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ],
  [ 0, -1, 0, 0, 1, 0, 0, 1, 0, -1, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0 ],
  [ 0, -1, 0, 0, 0, 1, 0, -1, -1, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 1, 1, 0, 0, 0, 0, -1, -1, 0, -1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1 ] ];
  

  


#ncinstancebottom:=[[  ],1,6];
#listofedge_bottom:=[[1],[2],[3],[4],[5],[6],[1,2],[3,4],[5,6]]; 
#numofVar:=6;
SHLT:=AddconstraintsTopAndBottom_noindep(ncinstancebottom);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_bottom);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlistbottom:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_bottom),linrowsT);


BT:=[ [ 0, 1, -1, 0, 0, 0, 0, 0, 0 ], [ 1, 0, -1, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 1, -1, 0, 0, 0 ],
  [ 0, 0, 0, 1, 0, -1, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 1, -1 ], [ 0, 0, 0, 0, 0, 0, 1, 0, -1 ],
  [ -1, -1, 1, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, -1, -1, 1, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, -1, -1, 1 ];


CombineT:=
[ [ -1, 0, 0, 0, -1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[1]
  [ -1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[2]
  [ 0, 1, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[3]
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0 ], #[4]
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0  ], #[5]
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0 ],#[6]
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0 ],#[7]
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1 ], #[8]
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, -1 ], #[9]
  [ -1, 0, 0, 0, 0, -1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[10]
  [ -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[11]
  [ 0, -1, 0, 0, 1, 0, 0, 1, 0, -1, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[1,3]
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, 0, 0, 0, -1, -1, 1, 0, 0, 0, 0, 0, 0 ], #[4,5]
[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, 0, 0 ], #[6,7]
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1  ], #[8,9]
  [ 0, -1, 0, 0, 0, 1, 0, -1, -1, 1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], #[3,10]
  [ 1, 1, 0, 0, 0, 0, -1, -1, 0, -1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ]; #[1,2,10,11]
  
  
 # Gamma 11 with N1:=[1,2,3,10,11]; N2:=[6,7]; N3:=[4,5,8,9]; 
# listofedge:=[[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11], [ 1, 2 ], [ 1, 3 ], [ 1, 2, 3 ], [ 1, 2, 4 ],
  [ 1, 3, 5 ], [ 4, 5 ], [4,5,6], [5,7], [ 6, 7 ],[ 6, 7, 8 ], [7,9],[8,9], [8,9,10], [9,11], [ 3, 10 ],  [ 10, 11 ], [ 1, 2, 10, 11 ]];
# numofVar:=11;
SHLT:=GenShannonUnBounded_decomposed(N1,N2,N3);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=[];
rlistC:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge),linrowsT);


  #ncinstancetop:=[[  ],3,9];  
#listofedge_top:=[ [ 1 ], [ 2 ], [ 3 ], [ 4 ], [ 5 ], [ 6 ], [ 7 ], [ 8 ], [ 9 ], [ 1, 2 ], [ 1, 3 ], [ 1, 2, 3 ], [ 1, 2, 4 ],
  [ 1, 3, 5 ], [ 4, 5 ], [ 6, 7 ], [ 3, 8 ], [ 6, 7, 8 ], [ 7, 9 ], [ 8, 9 ], [ 1, 2, 8, 9 ] ]
#numofVar:=9;
SHLT:=AddconstraintsTopAndBottom_noindep(ncinstancetop);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_top);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlisttop:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_top),linrowsT);

#ncinstancebottom:=[[  ],3,6];
#listofedge_bottom:=[[1],[2],[3],[4],[5],[6],[1,2],[1,2,3],[2,4],[3,4],[3,4,5],[4,6],[5,6]]; 
#numofVar:=6;
SHLT:=AddconstraintsTopAndBottom_noindep(ncinstancebottom);;
AAT:=Permute_marginalAndJoin(numofVar,listofedge_bottom);;
SHTA:=Permute_matrix_parallel(SHLT[1],AAT);;
SHT_P:=SHTA[1];;
SbT:=SHLT[2];;
A1:=SHTA[2];;
linrowsT:=SHLT[3];;
rlistbottom:=ProjectOntoUseful_Var(SHT_P,SbT,Length(listofedge_bottom),linrowsT);
